{"version":3,"sources":["components/profile/ProfileInfo/ProfileInfo.module.css","components/profile/MyPosts/MyPosts.module.css","components/profile/MyPosts/Post/Post.module.css","components/profile/MyPosts/Post/Post.jsx","components/profile/MyPosts/MyPosts.jsx","components/profile/MyPosts/MyPostsContainer.jsx","components/profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/profile/ProfileInfo/ProfileDataForm.jsx","components/profile/ProfileInfo/ProfileInfo.jsx","components/profile/profile.jsx","components/profile/profileContainer.jsx"],"names":["module","exports","Post","Props","className","s","item","src","message","likesCount","maxLength10","maxLengthCreator","MyPostsFormRedux","reduxForm","form","props","onSubmit","handleSubmit","postsForm","Field","component","Textarea","name","placeholder","validate","required","MyPosts","postsElements","posts","reverse","map","p","id","postsBlock","values","addPost","newPostElement","MyPostsContainer","connect","state","profilePage","dispatch","newPostBody","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","isOwner","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","ProfileDataReduxForm","profile","error","styles","formSummaryError","Input","type","Object","keys","contacts","key","ProfileData","dataBlockEditFalse","onClick","editModeTrue","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","contactsItem","ProfileInfo","Preloader","discriptionBlock","imgBlock","photos","large","userPhoto","inputFile","target","files","length","selectedPhoto","fullName","dataBlock","formData","saveProfile","then","initialValues","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.b0c548b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__19UeT\",\"imgBlock\":\"ProfileInfo_imgBlock__3o7CU\",\"status\":\"ProfileInfo_status__1MW7H\",\"inputFile\":\"ProfileInfo_inputFile__2MQa8\",\"contactsItem\":\"ProfileInfo_contactsItem__1HTP-\",\"dataBlock\":\"ProfileInfo_dataBlock__1g4cJ\",\"dataBlockEditFalse\":\"ProfileInfo_dataBlockEditFalse__17Bvq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__6pkEu\",\"postsForm\":\"MyPosts_postsForm__1_wrm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1RQmz\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (Props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://image.freepik.com/free-vector/hand-drawn-fuck-you-symbol_23-2148674548.jpg' />\r\n      {Props.message}\r\n      <div>\r\n        <span>like {Props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let postsElements = [...props.posts].reverse().map(p => <Post message={p.message} \r\n                                                                likesCount={p.likesCount}\r\n                                                                key={p.id} />);\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.newPostElement);\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>Posts:</h3>\r\n      <div>\r\n        <MyPostsFormRedux onSubmit={addNewPost}/>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst MyPostsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={s.postsForm}>\r\n      <div>\r\n        <Field component={Textarea} name='newPostElement' \r\n               placeholder='Enter your message' \r\n               validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MyPostsFormRedux = reduxForm({form: 'addPostForm'})(MyPostsForm);\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { addPostActionCreator } from './../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostBody) => {dispatch(addPostActionCreator(newPostBody))}\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => { setStatus(props.status)}, [props.status] )\r\n  \r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n\r\n      { !editMode &&\r\n        <div>\r\n        <span onDoubleClick={props.isOwner && activateEditMode}\r\n              className={s.status} >{props.status || \".......\"}</span>\r\n      </div>}\r\n\r\n      { editMode &&\r\n        <div>\r\n          <input autoFocus={true} \r\n                 onBlur={deactivateEditMode} \r\n                 value={status}\r\n                 onChange={onStatusChange} />\r\n        </div>}\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input, Textarea } from '../../common/FormsControls/FormsControls';\r\nimport styles from '../../common/FormsControls/FormsControls.module.css'\r\n\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <button>Save</button>\r\n      </div>\r\n      {error && <div className={styles.formSummaryError}>{error}</div>}\r\n      <div>\r\n        <b>Full name:</b>\r\n        <Field placeholder={'Full name'}\r\n          name={'fullName'}\r\n          component={Input} />\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job:</b>\r\n        <Field type={'checkbox'}\r\n          name={'lookingForAJob'}\r\n          component={Input} />\r\n      </div>\r\n      <div>\r\n        <b>My professional skills:</b>\r\n        <Field placeholder={'My professional skills'}\r\n          name={'lookingForAJobDescription'}\r\n          component={Textarea} />\r\n      </div>\r\n      <div>\r\n        <b>About me:</b>\r\n        <Field placeholder={'About me'}\r\n          name={'aboutMe'}\r\n          component={Textarea} />\r\n      </div>\r\n      <div>\r\n        <b>Contacts:</b>\r\n        {Object.keys(profile.contacts).map(key => {\r\n          return <div key={key}>\r\n            <b>{key} : <Field name={'contacts.'+key}\r\n                              placeholder={key}\r\n                              component={Input} /> </b>\r\n          </div>\r\n        })}\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nconst ProfileDataReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm);\r\n\r\nexport default ProfileDataReduxForm;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport userPhoto from '../../../assets/images/user.jpg';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport { useState } from 'react';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false)\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelect = (e) => {\r\n    if (e.target.files.length) {\r\n      props.selectedPhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData).then(\r\n      () => { setEditMode(false) }\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.discriptionBlock}>\r\n        <div className={s.imgBlock}>\r\n          <img src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto} />\r\n          {props.isOwner &&\r\n            <div>\r\n              <input type={\"file\"}\r\n                className={s.inputFile}\r\n                onChange={onMainPhotoSelect} />\r\n              <p>Change photo</p>\r\n            </div>\r\n          }\r\n        </div>\r\n        <div>\r\n          <h1>{props.profile.fullName}</h1>\r\n          <b>Status:</b>\r\n          <ProfileStatusWithHooks status={props.status} \r\n                                  updateStatus={props.updateStatus}\r\n                                  isOwner={props.isOwner} />\r\n          <div className={s.dataBlock}>\r\n            {editMode\r\n              ? <ProfileDataForm profile={props.profile}\r\n                onSubmit={onSubmit}\r\n                initialValues={props.profile} />\r\n              : <ProfileData profile={props.profile}\r\n                editModeTrue={() => setEditMode(true)}\r\n                isOwner={props.isOwner} />\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nconst ProfileData = (props) => {\r\n  return (\r\n    <div className={s.dataBlockEditFalse}>\r\n      <div>\r\n        {props.isOwner && <button onClick={props.editModeTrue}>Edit</button>}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job: </b>{props.profile.lookingForAJob ? 'yes' : 'no'}\r\n      </div>\r\n      <div>\r\n        <b>My professional skills: </b>{props.profile.lookingForAJobDescription}\r\n      </div>\r\n      <div>\r\n        <b>About me: </b>{props.profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts: </b>\r\n        {Object.keys(props.profile.contacts).map(key => <Contact contactTitle={key}\r\n          contactValue={props.profile.contacts[key]}\r\n          key={key}\r\n        />)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div className={s.contactsItem}>\r\n      <b>• {contactTitle}: </b> {contactValue}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo  profile={props.profile}\r\n                    isOwner={props.isOwner}\r\n                    saveProfile={props.saveProfile}\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatus}\r\n                    selectedPhoto={props.selectedPhoto} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, saveProfile, selectedPhoto } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n  \r\n  refreshProfile () {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    };\r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.refreshProfile()\r\n  };\r\n\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n  \r\n  render () {\r\n    return (\r\n    <Profile {...this.props} \r\n              profile={this.props.profile} \r\n              saveProfile={this.props.saveProfile}\r\n              isOwner={!this.props.match.params.userId}\r\n              status={this.props.status} \r\n              selectedPhoto={this.props.selectedPhoto}\r\n              updateStatus={this.props.updateStatus}/>\r\n    )\r\n  }\r\n};\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\nprofile: state.profilePage.profile,\r\nstatus: state.profilePage.status,\r\nauthorizedUserId: state.auth.userId,\r\nisAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, saveProfile, selectedPhoto }),\r\n  withRouter\r\n  )(ProfileContainer);"],"sourceRoot":""}