{"version":3,"sources":["components/profile/ProfileInfo/ProfileInfo.module.css","components/profile/MyPosts/MyPosts.module.css","components/profile/MyPosts/Post/Post.module.css","components/profile/MyPosts/Post/Post.jsx","components/profile/MyPosts/MyPosts.jsx","components/profile/MyPosts/MyPostsContainer.jsx","components/profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/profile/ProfileInfo/ProfileInfo.jsx","components/profile/profile.jsx","components/profile/profileContainer.jsx"],"names":["module","exports","Post","Props","className","s","item","src","message","likesCount","maxLength10","maxLengthCreator","MyPostsFormRedux","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","postsElements","posts","reverse","map","p","postsBlock","values","addPost","newPostElement","MyPostsContainer","connect","state","profilePage","dispatch","newPostBody","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","ProfileInfo","profile","Preloader","discriptionBlock","imgBlock","photos","large","userPhoto","isOwner","type","target","files","length","selectedPhoto","fullName","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.1c429e97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__19UeT\",\"imgBlock\":\"ProfileInfo_imgBlock__3o7CU\",\"status\":\"ProfileInfo_status__1MW7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__6pkEu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1RQmz\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (Props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://image.freepik.com/free-vector/hand-drawn-fuck-you-symbol_23-2148674548.jpg' />\r\n      {Props.message}\r\n      <div>\r\n        <span>like {Props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let postsElements = [...props.posts].reverse().map(p => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.newPostElement);\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>Posts:</h3>\r\n      <div>\r\n        <MyPostsFormRedux onSubmit={addNewPost}/>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst MyPostsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name='newPostElement' \r\n               placeholder='Enter your message' \r\n               validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MyPostsFormRedux = reduxForm({form: 'addPostForm'})(MyPostsForm);\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { addPostActionCreator } from './../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostBody) => {dispatch(addPostActionCreator(newPostBody))}\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => { setStatus(props.status)}, [props.status] )\r\n  \r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n\r\n      { !editMode &&\r\n        <div>\r\n        <span onDoubleClick={activateEditMode}\r\n              className={s.status} >{props.status || \".......\"}</span>\r\n      </div>}\r\n\r\n      { editMode &&\r\n        <div>\r\n          <input autoFocus={true} \r\n                 onBlur={deactivateEditMode} \r\n                 value={status}\r\n                 onChange={onStatusChange} />\r\n        </div>}\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport userPhoto from '../../../assets/images/user.jpg';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n  \r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  \r\n  const onMainPhotoSelect = (e) => {\r\n    if (e.target.files.length) {\r\n      props.selectedPhoto( e.target.files[0] )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.discriptionBlock}>\r\n        <div className={s.imgBlock}>\r\n          <img src={props.profile.photos.large !=null ? props.profile.photos.large : userPhoto}/>\r\n          {props.isOwner && <input type={\"file\"}\r\n                                   onChange={onMainPhotoSelect}/>}\r\n        </div>\r\n        <div>\r\n        <h1>{props.profile.fullName}</h1>\r\n        <h5>Status:</h5>\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo  profile={props.profile}\r\n                    isOwner={props.isOwner}\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatus}\r\n                    selectedPhoto={props.selectedPhoto} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, selectedPhoto } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n  \r\n  refreshProfile () {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    };\r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.refreshProfile()\r\n  };\r\n\r\n  componentDidUpdate (prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n      this.refreshProfile()\r\n    }\r\n  }\r\n  \r\n  render () {\r\n    return (\r\n    <Profile {...this.props} \r\n              profile={this.props.profile} \r\n              isOwner={!this.props.match.params.userId}\r\n              status={this.props.status} \r\n              selectedPhoto={this.props.selectedPhoto}\r\n              updateStatus={this.props.updateStatus}/>\r\n    )\r\n  }\r\n};\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\nprofile: state.profilePage.profile,\r\nstatus: state.profilePage.status,\r\nauthorizedUserId: state.auth.userId,\r\nisAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, selectedPhoto }),\r\n  withRouter\r\n  )(ProfileContainer);"],"sourceRoot":""}