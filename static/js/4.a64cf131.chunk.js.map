{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","s","dialog","active","name","Message","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"oOAMIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAStC,OAFiCM,YAAQX,EAARW,CAAoCL,K,oBCjBzEM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,2FCapMC,EAVI,SAACN,GAChB,IAAIO,EAAO,YAAcP,EAAMQ,GAE/B,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASX,GAAIM,EAAb,SAAoBP,EAAMa,UCCvBC,EANC,SAACd,GACb,OACI,qBAAKS,UAAWC,IAAEK,QAAlB,SAA4Bf,EAAMe,W,kCC8BpCC,EAAeC,YAAiB,KAkBhCC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAhBL,SAACnB,GACpB,OACA,uBAAMqB,SAAUrB,EAAMsB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXZ,KAAK,iBACLa,YAAY,qBACZC,SAAU,CAACC,IAAUZ,OAEhC,8BACI,kDAQGa,EA9CC,SAAC7B,GAEb,IAAIP,EAAQO,EAAM8B,YAEdC,EAAkBtC,EAAMuC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAiBL,GAAI0B,EAAE1B,IAAZ0B,EAAE1B,OAC1E2B,EAAmB1C,EAAM2C,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAE7B,OAQnF,OACI,sBAAKC,UAAWC,IAAEsB,QAAlB,UACI,qBAAKvB,UAAWC,IAAE4B,aAAlB,SACKP,IAEL,sBAAKtB,UAAWC,IAAE0B,SAAlB,UACI,8BAAMD,IACN,cAACjB,EAAD,CAAqBG,SAZb,SAACkB,GACjBvC,EAAMwC,YAAYD,EAAOE,0B,wBCElBC,sBACXvC,aAdkB,SAACV,GACnB,MAAO,CACHqC,YAAarC,EAAMqC,gBAGF,SAACa,GACtB,MAAO,CACHH,YAAa,SAACC,GAAqBE,EAASC,YAAmBH,SAQnE7C,IAFW8C,CAGbb","file":"static/js/4.a64cf131.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth \r\n    });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let connectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return connectedRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1oop-\",\"dialogsItems\":\"Dialogs_dialogsItems__RQ8zV\",\"dialog\":\"Dialogs_dialog__hU8cw\",\"active\":\"Dialogs_active__2Ysdf\",\"messages\":\"Dialogs_messages__3kDkV\",\"message\":\"Dialogs_message__3GJRx\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    \r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    \r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={Textarea} \r\n                   name='newMessageBody' \r\n                   placeholder='Enter your message'\r\n                   validate={[required, maxLength100]} />\r\n        </div>\r\n        <div>\r\n            <button>Send</button>\r\n        </div>\r\n    </form>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => { dispatch(sendMessageCreator(newMessageBody)) },\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}