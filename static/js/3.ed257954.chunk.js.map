{"version":3,"sources":["hoc/withAuthRedirect.js","components/profile/ProfileInfo/ProfileInfo.module.css","components/profile/MyPosts/MyPosts.module.css","components/profile/MyPosts/Post/Post.module.css","components/profile/MyPosts/Post/Post.jsx","components/profile/MyPosts/MyPosts.jsx","components/profile/MyPosts/MyPostsContainer.jsx","components/profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/profile/ProfileInfo/ProfileInfo.jsx","components/profile/profile.jsx","components/profile/profileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","Props","className","s","item","src","message","likesCount","maxLength10","maxLengthCreator","MyPostsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","postsElements","posts","reverse","map","p","postsBlock","values","addPost","newPostElement","MyPostsContainer","profilePage","dispatch","newPostBody","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","ProfileInfo","profile","discriptionBlock","imgBlock","photos","large","userPhoto","fullName","Preloader","Profile","content","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.ed257954.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth \r\n    });\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let connectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return connectedRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__19UeT\",\"imgBlock\":\"ProfileInfo_imgBlock__3o7CU\",\"status\":\"ProfileInfo_status__1MW7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__6pkEu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1RQmz\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (Props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://image.freepik.com/free-vector/hand-drawn-fuck-you-symbol_23-2148674548.jpg' />\r\n      {Props.message}\r\n      <div>\r\n        <span>like {Props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n  let postsElements = [...props.posts].reverse().map(p => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.newPostElement);\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>Posts:</h3>\r\n      <div>\r\n        <MyPostsFormRedux onSubmit={addNewPost}/>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst MyPostsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name='newPostElement' \r\n               placeholder='Enter your message' \r\n               validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MyPostsFormRedux = reduxForm({form: 'addPostForm'})(MyPostsForm);\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { addPostActionCreator } from './../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostBody) => {dispatch(addPostActionCreator(newPostBody))}\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => { setStatus(props.status)}, [props.status] )\r\n  \r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n\r\n      { !editMode &&\r\n        <div>\r\n        <span onDoubleClick={activateEditMode}\r\n              className={s.status} >{props.status || \".......\"}</span>\r\n      </div>}\r\n\r\n      { editMode &&\r\n        <div>\r\n          <input autoFocus={true} \r\n                 onBlur={deactivateEditMode} \r\n                 value={status}\r\n                 onChange={onStatusChange} />\r\n        </div>}\r\n\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport userPhoto from '../../../assets/images/user.jpg';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n  \r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div className={s.discriptionBlock}>\r\n        <div className={s.imgBlock}>\r\n          <img src={props.profile.photos.large !=null ? props.profile.photos.large : userPhoto}/>\r\n        </div>\r\n        <div>\r\n        <h1>{props.profile.fullName}</h1>\r\n        <h5>Status:</h5>\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.content}>\r\n      <ProfileInfo profile={props.profile}\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n  \r\n  componentDidMount () {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n      if (!userId) {\r\n        this.props.history.push('/login')\r\n      }\r\n    };\r\n    this.props.getUserProfile(userId)\r\n    this.props.getStatus(userId)\r\n  };\r\n  \r\n  render () {\r\n    return (\r\n    <Profile {...this.props} \r\n              profile={this.props.profile} \r\n              status={this.props.status} \r\n              updateStatus={this.props.updateStatus}/>\r\n    )\r\n  }\r\n};\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\nprofile: state.profilePage.profile,\r\nstatus: state.profilePage.status,\r\nauthorizedUserId: state.auth.userId,\r\nisAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n  withRouter\r\n  )(ProfileContainer);"],"sourceRoot":""}